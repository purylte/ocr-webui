// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func ClipboardUpload(swapTarget string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"clip-source\" hx-post=\"/upload\" hx-encoding=\"multipart/form-data\" hx-swap=\"innerHTML\" hx-target=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(swapTarget)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/clipboardUpload.templ`, Line: 4, Col: 117}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><script>\n        document.addEventListener(\"DOMContentLoaded\", function () {\n\n            document.addEventListener(\"paste\", async function (event) {\n                const items = event.clipboardData.items;\n                let imageBlob = null;\n\n                for (const item of items) {\n                    if (item.type.startsWith(\"image/\")) {\n                        imageBlob = item.getAsFile();\n                        break;\n                    }\n                }\n\n                if (imageBlob) {\n                    handleImageUpload(imageBlob);\n                } else {\n                    alert(\"No image found in clipboard\");\n                }\n            });\n\n            function handleImageUpload(blob) {\n                const clipSource = document.getElementById(\"clip-source\")\n                htmx.ajax('POST',\n                    clipSource.getAttribute('hx-post'), {\n                    target: clipSource.getAttribute(\"hx-target\"),\n                    values: {\n                        image: blob\n                    },\n                    source: clipSource,\n                })\n            }\n        });\n    </script></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
